#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp LEFT_CONTROL>;
        };

        td1: td1 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp LG(CAPSLOCK)>;
        };

        tb2: tb2 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&mo 4>;

            label = "TB2";
        };

        tb3: tb3 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&none>, <&to 5>;

            label = "TB3";
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        change_lang {
            bindings = <&kp LG(SPACE)>;
            key-positions = <45 43>;
            slow-release;
            require-prior-idle-ms = <600>;
            layers = <1>;
            timeout-ms = <300>;
        };
    };

    macros {
        emergent: emergent {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp C_STOP>,
                <&macro_release>,
                <&kp C_MUTE>,
                <&macro_release>,
                <&kp LC(LG(Q))>;

            label = "EMERGENT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E     &kp R      &kp T                                &mmv MOVE_UP                     &kp Y  &kp U      &kp I      &kp O    &kp P     &kp BSPC
&td1        &kp A  &kp S  &kp D     &kp F      &kp G                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp H  &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&td0        &kp Z  &kp X  &kp C     &kp V      &kp B  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp N  &kp M      &kp COMMA  &kp DOT  &kp FSLH  &tb2
                          &kp LGUI  &kp SPACE  &tb3                                                                  &mo 1  &kp ENTER  &mo 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Layer1 {
            display-name = "Layer1";
            bindings = <
&kp GRAVE         &kp N1     &kp N2     &kp N3        &kp N4          &kp N5                          &trans             &kp N6     &kp N7    &kp N8     &kp N9  &kp N0  &kp DELETE
&kp LG(GRAVE)     &kp LG(A)  &kp LG(S)  &kp LG(D)     &kp LG(F)       &kp LG(G)               &trans  &mkp LCLK  &trans  &kp PG_UP  &kp UP    &kp PG_DN  &none   &none   &none
&kp LEFT_CONTROL  &kp LG(Z)  &kp LG(X)  &kp LG(C)     &kp LG(V)       &kp LG(B)     &trans            &trans             &kp LEFT   &kp DOWN  &kp RIGHT  &none   &none   &none
                                        &kp LEFT_GUI  &kp LEFT_SHIFT  &kp LEFT_ALT                                       &trans     &trans    &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Layer2 {
            display-name = "Layer2";
            bindings = <
&kp TILDE  &kp EXCL  &kp AT  &kp HASH      &kp DLLR       &kp PRCNT                    &trans             &kp CARET     &kp AMPS        &kp ASTRK     &kp LPAR          &kp RPAR           &kp DELETE
&none      &none     &none   &kp PG_UP     &kp UP         &kp PG_DN            &trans  &mkp RCLK  &trans  &none         &kp MINUS       &kp EQUAL     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH
&none      &none     &none   &kp LEFT      &kp DOWN       &kp RIGHT  &trans            &trans             &kp LG(T)     &kp UNDERSCORE  &kp PLUS      &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp PIPE
                             &kp LG(LEFT)  &kp LG(RIGHT)  &mo 2                                           &kp LEFT_GUI  &kp LEFT_SHIFT  &kp LEFT_ALT
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer3 {
            display-name = "Layer3";
            bindings = <
&kp LG(NUMBER_1)   &kp LG(NUMBER_2)  &kp LS(LG(NUMBER_2))  &kp LG(LS(NUMBER_3))  &kt LS(LG(NUMBER_4))  &kt LS(LG(N5))                    &trans             &none  &none  &none         &none         &none          &emergent
&kp LG(LS(GRAVE))  &kp LG(LS(A))     &kp LS(LG(S))         &kp LS(LG(D))         &kp LS(LG(F))         &kp LS(LG(G))             &trans  &mkp LCLK  &trans  &none  &none  &kp PG_UP     &kp LA(UP)    &kp PG_DN      &none
&kp LEFT_CONTROL   &kp LG(LS(Z))     &kp LG(X)             &kp LS(LG(C))         &kp LS(LG(V))         &kp LS(LG(B))   &trans            &trans             &none  &none  &kp LA(LEFT)  &kp LA(DOWN)  &kp LA(RIGHT)  &none
                                                           &kp LEFT_GUI          &kp LEFT_SHIFT        &kp LEFT_ALT                                         &none  &none  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer4 {
            display-name = "System";
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &out OUT_USB                    &trans             &bt BT_CLR_ALL  &none  &none   &none  &none  &none
&none         &none         &none         &none         &none         &none                   &trans  &mkp LCLK  &trans  &none           &none  &none   &none  &none  &none
&none         &none         &none         &none         &none         &none         &trans            &trans             &none           &none  &none   &none  &none  &mo 4
                                          &none         &none         &none                                              &none           &none  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer5 {
            bindings = <
&kp SLASH     &kp N7  &kp N8  &kp N9     &kp MINUS  &kp DELETE                      &none         &none  &to 0  &to 0  &none  &none  &none
&kp ASTERISK  &kp N4  &kp N5  &kp N6     &kp PLUS   &kp BACKSPACE            &none  &none  &none  &to 0  &to 0  &to 0  &to 0  &none  &none
&kp N0        &kp N1  &kp N2  &kp N3     &kp DOT    &kp TAB        &trans           &none         &none  &to 0  &to 0  &none  &none  &none
                              &kp COMMA  &kp SPACE  &kp ENTER                                     &none  &none  &none
            >;

            label = "NUMBER";
            sensor-bindings = <&scroll_encoder>;
        };
    };
};

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp LEFT_CONTROL>;
        };

        td1: td1 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp LG(CAPSLOCK)>;
        };

        tb2: tb2 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&mo 4>;

            label = "TB2";
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        change_lang {
            bindings = <&kp LG(SPACE)>;
            key-positions = <44 45>;
            require-prior-idle-ms = <300>;
            timeout-ms = <600>;
            slow-release;
            layers = <0>;
        };
    };

    macros {
        emergent: emergent {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp C_MUTE>,
                <&macro_release>,
                <&kp LC(LG(Q))>;

            label = "EMERGENT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E     &kp R  &kp T                                    &mmv MOVE_UP                     &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&td1        &kp A  &kp S  &kp D     &kp F  &kp G                    &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&td0        &kp Z  &kp X  &kp C     &kp V  &kp B      &kp C_MUTE                    &mmv MOVE_DOWN                   &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &tb2
                          &kp LGUI  &mo 3  &kp SPACE                                                                 &kp ENTER  &mo 2  &mo 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp GRAVE      &kp N1     &kp N2     &kp N3         &kp N4            &kp N5                         &trans             &kp N6  &kp N7     &kp N8    &kp N9     &kp N0          &kp DELETE
&kp LG(TAB)    &kp LG(A)  &kp LG(S)  &kp LG(LS(S))  &kp LG(LS(V))     &kp LS(G)              &trans  &mkp RCLK  &trans  &none   &kp PG_UP  &kp UP    &kp PG_DN  &none           &none
&kp LS(LG(Z))  &kp LG(Z)  &kp LG(X)  &kp LG(C)      &kp LG(V)         &kp LG(B)     &none            &trans             &none   &kp LEFT   &kp DOWN  &kp RIGHT  &kp LEFT_SHIFT  &none
                                     &kp LEFT_GUI   &kp LEFT_CONTROL  &kp LEFT_ALT                                      &trans  &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp TILDE       &kp EXCL        &kp AT    &kp HASH  &kp DLLR   &kp PRCNT                       &trans             &kp CARET      &kp AMPS        &kp ASTRK  &kp LPAR          &kp RPAR           &kp DELETE
&none           &none           &kp HOME  &kp UP    &kp END    &none                   &trans  &mkp RCLK  &trans  &none          &kp MINUS       &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH
&kp LEFT_SHIFT  &kp LEFT_SHIFT  &kp LEFT  &kp DOWN  &kp RIGHT  &kp LEFT_ALT  &trans            &trans             &none          &kp UNDERSCORE  &kp PLUS   &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp PIPE
                                          &trans    &trans     &trans                                             &kp LG(SPACE)  &trans          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LS(LG(NUMBER_2))  &kp LG(LS(NUMBER_3))  &kt LS(LG(NUMBER_4))  &kt LS(LG(N5))                    &trans             &none  &none  &none         &none         &none          &none
&none             &kp LG(A)         &none                 &none                 &none                 &none                     &trans  &mkp RCLK  &trans  &none  &none  &kp PG_UP     &kp LA(UP)    &kp PG_DN      &none
&kp LS(LG(Z))     &kp LG(Z)         &kp LG(X)             &kp LG(C)             &kp LG(V)             &none           &trans            &trans             &none  &none  &kp LA(LEFT)  &kp LA(DOWN)  &kp LA(RIGHT)  &kp LEFT_SHIFT
                                                          &trans                &none                 &none                                                &none  &none  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_4 {
            display-name = "System";
            bindings = <
&bt BT_SEL 0          &bt BT_SEL 1          &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4  &out OUT_USB                    &trans             &bt BT_CLR_ALL  &none  &none   &none  &none  &emergent
&none                 &none                 &none           &none         &none         &none                   &trans  &mkp RCLK  &trans  &none           &none  &none   &none  &none  &none
&kp LS(LG(NUMBER_3))  &kp LS(LG(NUMBER_4))  &kp LS(LG(N5))  &none         &none         &none         &trans            &trans             &none           &none  &none   &none  &none  &mo 4
                                                            &none         &none         &none                                              &none           &none  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
